/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bakery as PrismaBakery } from "@prisma/client";

export class BakeryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BakeryCountArgs, "select">): Promise<number> {
    return this.prisma.bakery.count(args);
  }

  async bakeries(args: Prisma.BakeryFindManyArgs): Promise<PrismaBakery[]> {
    return this.prisma.bakery.findMany(args);
  }
  async bakery(
    args: Prisma.BakeryFindUniqueArgs
  ): Promise<PrismaBakery | null> {
    return this.prisma.bakery.findUnique(args);
  }
  async createBakery(args: Prisma.BakeryCreateArgs): Promise<PrismaBakery> {
    return this.prisma.bakery.create(args);
  }
  async updateBakery(args: Prisma.BakeryUpdateArgs): Promise<PrismaBakery> {
    return this.prisma.bakery.update(args);
  }
  async deleteBakery(args: Prisma.BakeryDeleteArgs): Promise<PrismaBakery> {
    return this.prisma.bakery.delete(args);
  }
}
